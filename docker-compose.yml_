version: '3.9'
services:
  frontend:
    image: frontend_delivery
    container_name: frontend
    build: ./front-end
    ports:
      - 3000:3000
    platform: linux/x86_64
    working_dir: /front-end
    volumes: 
      - ./front-end/src:/front-end/src
    depends_on:
      backend:
        condition: service_healthy
    # Os `healthcheck` devem garantir que a aplicação
    # está operacional, antes de liberar o container
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3000"]  # Caso utilize outra porta interna para o front, altere ela aqui também
      timeout: 10s
      retries: 5
  backend:
    image: backend_delivery
    container_name: backend
    build: ./back-end
    ports:
      - 3002:3002
    platform: linux/x86_64
    working_dir: /back-end
    volumes: 
      - ./back-end/src:/back-end/src
    depends_on:
      db:
        condition: service_healthy
    environment:
      - APP_PORT=3002
      - JWT_SECRET=jwt_secret
      # Os dados abaixo se referem ao container `db`
      # Dica: Relembre aqui da comunicação interna entre containers
      - DB_USER=root
      - DB_PASS=password
      - DB_HOST=db
      - DB_PORT=3306
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3002"] # Caso utilize outra porta interna para o back, altere ela aqui também
      timeout: 10s
      retries: 5
  db:
    image: mysql:8.0.21
    container_name: db
    platform: linux/x86_64
    ports:
    # - 3002:3306 -> 3002 usa na porta do mysql work essa porta redirec 3306
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=password
    restart: 'always'
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"] # Deve aguardar o banco ficar operacional
      timeout: 10s
      retries: 5
    cap_add:
      - SYS_NICE # Deve omitir alertas menores
